//less 中的单行注释，注释中的内容不会被解析到css

/* 
    css中的注释，内容会解析到css文件中
*/
.box1{
    background-color: burlywood;
    .box2{
        background-color: chartreuse;
        .box3{
            background-color: crimson;
        }
    }
    .box4{
        color: darkmagenta;
    }
}

//变量，在变量中可以存储一个任意的值
// 并且我们可以在需要时，任意的修改变量中的值
// 变量的语法： @变量名
@a:200px;
@b:red;
@c:box6;
.box5{
    //使用变量时，如果是直接使用则以　@变量名　的形式使用即可
    width: @a;
    color: @b;
}

//作为类名，或者一部分值使用时，必须以　@{变量名}的形式使用
.@{c}{
    width: @a;
}
@d:200px;
@d:300px;
div{
    //变量在声明时，会优先使用比较近的变量
    width: @d;
}

div{
    width: 300px;

    height: $width;
}
/* &符号使用 */
.button{
    &-one{
        background-color: red;
    }
    &-two{
        background-color: rgb(151, 109, 109);
    }
    &-three{
        background-color: rgb(31, 17, 17);
    }
}

/* :extend() 对当前选择器扩展指定选择器的样式（选择器分组） */
.p1{
    width: 200px;
    height: 200px;
}
.p2:extend(.p1){
    color: red;
}
/* 直接对指定的样式进行引用 */
.p3{
    .p1;
    color: blue;
}

//使用类选择器时，可以再选择器后面加一个和括号，这是我们
//实际上就时创建了一个供其它选择器引用的一个选择器，css中不存在该选择器
.p4(){
    width: 200px;
    height: 200px;
}
.p5{
    .p4();
}

//混合函数 在混和函数中可以直接设置变量
.test(@w,@h){
    width: @w;
    height: @h;
    background-color: red;
}
.test2{
    .test(100px,200px);//类似于将参数传给test之后再引用
}
.div222{
    width: 200px;
}